# Generated by Django 5.0.3 on 2024-03-25 21:44

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DistrictBorough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the borough, which may be numeric",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "borough",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="DistrictCongress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The number of the congressional district",
                        max_length=5,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "congressional district",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="DistrictMagisterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the district",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "magisterial district",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="DistrictPrecinct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the district, which may be numeric",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "precinct",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="DistrictStatehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The number of the house of delegates district",
                        max_length=5,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "house of delegates district",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="DistrictStatesenate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text='The number of the district.  This can include letters (ex "11a").  Precede with "0"\'s as necessary to maintain sort order',
                        max_length=5,
                        verbose_name="number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The number of the state senate district",
                        max_length=5,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "state senate district",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="Linkexternalname",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the link,",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Name for External Link",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Meetingtype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the type of meeting,",
                        max_length=100,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Membershipclass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the type,",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "is_member",
                    models.IntegerField(
                        choices=[(0, "no"), (11, "pending"), (111, "yes")],
                        default=0,
                        help_text="If a person of this class is considered a member of the committee",
                        verbose_name="is member",
                    ),
                ),
                (
                    "is_quorum_member",
                    models.IntegerField(
                        choices=[(0, "no"), (11, "pending"), (111, "yes")],
                        default=0,
                        help_text="If a person of this class can be part of a quorum",
                        verbose_name="is quorum member",
                    ),
                ),
                (
                    "is_participant",
                    models.IntegerField(
                        choices=[(0, "no"), (111, "yes")],
                        default=0,
                        help_text="If a person of this class participates and has interest in the committee - attends meetings, volunteers, etc..",
                        verbose_name="is a participant",
                    ),
                ),
                (
                    "ordinal",
                    models.IntegerField(
                        choices=[
                            (1, "First"),
                            (2, "Second"),
                            (3, "Third"),
                            (4, "Before Medium"),
                            (5, "Medium"),
                            (6, "After Medium"),
                            (7, "Third Last"),
                            (8, "Second Last"),
                            (9, "Last"),
                        ],
                        default=5,
                        help_text="A number assigned for sorting, with lowest number first",
                        verbose_name="ordinal",
                    ),
                ),
            ],
            options={
                "verbose_name": "membership class",
                "ordering": ("ordinal", "is_quorum_member", "is_member", "name"),
            },
        ),
        migrations.CreateModel(
            name="Subcommitteetype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the subcommittee type,",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "ordinal",
                    models.IntegerField(
                        choices=[
                            (1, "First"),
                            (2, "Second"),
                            (3, "Third"),
                            (4, "Before Medium"),
                            (5, "Medium"),
                            (6, "After Medium"),
                            (7, "Third Last"),
                            (8, "Second Last"),
                            (9, "Last"),
                        ],
                        default=5,
                        help_text="A number assigned for sorting, with lowest number first",
                        verbose_name="ordinal",
                    ),
                ),
            ],
            options={
                "verbose_name": "subcommittee type",
                "ordering": ("ordinal", "name"),
            },
        ),
        migrations.CreateModel(
            name="Meeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "when_held",
                    models.DateField(
                        default=datetime.date.today,
                        help_text="The date of the meeting",
                        verbose_name="date",
                    ),
                ),
                (
                    "had_quorum",
                    models.BooleanField(
                        default=True,
                        help_text="If the meeting had a quorum",
                        verbose_name="quorum",
                    ),
                ),
                (
                    "meetingtype",
                    models.ForeignKey(
                        help_text="The type of meeting",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.meetingtype",
                    ),
                ),
            ],
            options={
                "ordering": ("-when_held", "meetingtype"),
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_first",
                    models.CharField(
                        help_text="The legal first name of the individual",
                        max_length=50,
                        verbose_name="first name",
                    ),
                ),
                (
                    "name_formal",
                    models.CharField(
                        help_text="The full name of the individual including title (Mr. Ms, Dr., etc..), middle names, and suffixes, to the extent known",
                        max_length=100,
                        verbose_name="formal name",
                    ),
                ),
                (
                    "name_friendly",
                    models.CharField(
                        help_text="Either the first name or a nickname that the person prefers to be addressed as in an informal setting",
                        max_length=20,
                        verbose_name="friendly name",
                    ),
                ),
                (
                    "name_last",
                    models.CharField(
                        blank=True,
                        help_text="The legal last name of the individual",
                        max_length=50,
                        verbose_name="last name",
                    ),
                ),
                (
                    "name_friendly_and_first",
                    models.CharField(
                        help_text="The first name and friendly name - auto generated at save",
                        max_length=50,
                        verbose_name="first and friendly name",
                    ),
                ),
                (
                    "primary_voice",
                    models.CharField(
                        blank=True,
                        help_text="The phone number to be used for voice calls",
                        max_length=50,
                        verbose_name="primary voice phone number",
                    ),
                ),
                (
                    "primary_text",
                    models.CharField(
                        blank=True,
                        help_text="The phone number to be used for text messages",
                        max_length=50,
                        verbose_name="primary text phone number",
                    ),
                ),
                (
                    "primary_email",
                    models.EmailField(
                        blank=True,
                        help_text="The person's email address",
                        max_length=250,
                        verbose_name="primary email adddress",
                    ),
                ),
                (
                    "voting_address",
                    models.TextField(
                        blank=True,
                        help_text="The person's voting address",
                        verbose_name="voting address",
                    ),
                ),
                (
                    "mailing_address",
                    models.TextField(
                        blank=True,
                        help_text="The person's mailing address if different from voting address",
                        verbose_name="mailing address",
                    ),
                ),
                (
                    "membership_date",
                    models.DateField(
                        verbose_name="Date of current membership type/status"
                    ),
                ),
                (
                    "application_date",
                    models.DateField(
                        blank=True,
                        help_text="The date of this person's most recent membership application",
                        null=True,
                        verbose_name="Most Recent Application Date",
                    ),
                ),
                (
                    "dues_effective_date",
                    models.DateField(
                        blank=True,
                        help_text="The effective date of the most recent dues (often the date of the caucus or meeting in which the person was admitted)",
                        null=True,
                        verbose_name="Dues Effective Date",
                    ),
                ),
                (
                    "districtborough",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's borough",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtborough",
                        verbose_name="Borough",
                    ),
                ),
                (
                    "districtcongress",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's congressional district",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtcongress",
                        verbose_name="Congressional District",
                    ),
                ),
                (
                    "districtmagisterial",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's magisterial district",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtmagisterial",
                        verbose_name="magisterial district",
                    ),
                ),
                (
                    "districtprecinct",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's voting precinct",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtprecinct",
                        verbose_name="precinct",
                    ),
                ),
                (
                    "districtstatehouse",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's House of Delegates district",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtstatehouse",
                        verbose_name="House of Delegates District",
                    ),
                ),
                (
                    "districtstatesenate",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's State Senate district",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.districtstatesenate",
                        verbose_name="State Senate District",
                    ),
                ),
                (
                    "membershipclass",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person's class of membership",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.membershipclass",
                        verbose_name="membership class",
                    ),
                ),
            ],
            options={
                "verbose_name": "Person",
                "verbose_name_plural": "People",
                "ordering": ("name_last", "name_friendly"),
            },
        ),
        migrations.CreateModel(
            name="Linkexternal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="The url of the link", verbose_name="url"
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        blank=True,
                        help_text="The name of the link,",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.linkexternalname",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        help_text="The person to which this link belongs",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "External Link",
            },
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "meeting",
                    models.ForeignKey(
                        help_text="The meeting which the person attended",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.meeting",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        help_text="The person who attended the meeting",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.person",
                    ),
                ),
            ],
            options={
                "ordering": ("meeting", "person"),
            },
        ),
        migrations.CreateModel(
            name="Subcommittee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the subcommittee,",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "subcommitteetype",
                    models.ForeignKey(
                        blank=True,
                        help_text="The type of submcommittee",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sdc_people.subcommitteetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "subcommittee",
                "ordering": ("subcommitteetype", "name"),
            },
        ),
        migrations.CreateModel(
            name="Subposition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the position,",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "ordinal",
                    models.IntegerField(
                        choices=[
                            (1, "First"),
                            (2, "Second"),
                            (3, "Third"),
                            (4, "Before Medium"),
                            (5, "Medium"),
                            (6, "After Medium"),
                            (7, "Third Last"),
                            (8, "Second Last"),
                            (9, "Last"),
                        ],
                        default=5,
                        help_text="A number assigned for sorting",
                        verbose_name="ordinal",
                    ),
                ),
                (
                    "subcommittee",
                    models.ForeignKey(
                        help_text="The subcommittee to which this title is attached",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.subcommittee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Position",
                "ordering": ("subcommittee", "ordinal", "name"),
            },
        ),
        migrations.CreateModel(
            name="Submembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        help_text="The peson who is a member of the subcommittee",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.person",
                    ),
                ),
                (
                    "subposition",
                    models.ForeignKey(
                        help_text="The committee and position in which the person is a member",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sdc_people.subposition",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subcommittee Membership",
                "ordering": ("subposition", "person"),
            },
        ),
    ]
